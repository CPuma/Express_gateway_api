# request externas
http:
  # port: 8080
  port: 8080

# https:
#   port: 9443
#   hostname: localhost
#   tls:
#     "*.demo.io":
#         key: example/keys/demo.io.key.pem
#         cert: example/keys/demo.io.cert.pem
#     "default":
#         key: example/keys/eg.io.key.pem
#         cert: example/keys/eg.io.cert.pem

#request internas 
admin:
  port: 9876
  host: localhost
  # host: 10.10.30.111


# endPoints de las apis (microservicios) y como se les referenciara
apiEndpoints:
  api:
    # host: localhost
    host: 10.10.30.111
    paths: '/ip'
  hero:
    host: 10.10.30.111
    # host: localhost
    paths: ['/*', '/usuario/*']
    methods: ["GET", "POST", "PUT", "DELETE"]
    # scopes: ["localhost:id"]
#  api:                  # nombre, usado como referencia en pipeline.
#     host: '*.com'       # [requerido], '*' no verificará el nombre del host, '*.com' soporte de patrón de comodín(*)
#     paths:
#       - '/v1/*'         # cadena o matriz de cadenas , despues del host /v1/* hara referencia al microservicio  , api
#       - '/v2/*'

#  example:              
#     host: 'example.com'
#     paths: /v2/*        

#  example2:              # Es posible proporcionar una serie de condiciones coincidentes en el mismo ENDPOINT API
#     - host: 'example2.com'
#       paths: /v2/*
#       methods: ["GET", "OPTIONS"]
#       scopes: ["example2:read"]

#     - host: 'example2.com'
#       paths: /v2/*
#       methods: ["PUT", "POST", "PATCH", "DELETE"]
#       scopes: ["example2:write"]


serviceEndpoints:
  httpbin:           # nombre, usado como referencia en pipeline.
    url: 'https://httpbin.org' # El protocolo y el nombre de host a las solicitudes de proxy
  dogs:                       
    urls:                     # Se pueden usar múltiples urls con balanceo de carga
      - "http://dogs1.example.com"
      - "http://dogs2.example.com"
  heroku:
    url: 'https://cpuma-apirest-nodejs.herokuapp.com'  # api en heroku


policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
pipelines:
  # default:         
  - name: herokupipe
    apiEndpoints:
      - hero
    policies:
    # - cors:       ##### https://www.express-gateway.io/docs/policies/cors/ ### LEER
    #   - action:
    #       origin: http://www.example.com
    #       credentials: true
    - key-auth: 5EV58z7I95YwaJRpNBwa1c:4a1i2H6gBOXDujlK5MmJ2l ,
                0AK26n720A7VbHYSodj11N:3OuOmGpx1QI13Hll3jhOmW #apikey
    - proxy:  
      - action:
          serviceEndpoint: heroku 
          changeOrigin: true
          # apiKeyHeader: 'MY-KEY-HEADER'  # cambia el Authorization
          # apiKeyHeaderScheme: ''  # elimina o cambia  el 'apikey' antes de la key-auth
  - name: httpbinpipe
    apiEndpoints:
      - api
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
    # - key-auth: 
    - proxy:
      - action:
          serviceEndpoint: httpbin 
          changeOrigin: true
